items:
- uid: System.Xml.Linq.XNodeDocumentOrderComparer
  id: XNodeDocumentOrderComparer
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  langs:
  - csharp
  - vb
  name: XNodeDocumentOrderComparer
  fullName: System.Xml.Linq.XNodeDocumentOrderComparer
  type: Class
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XNodeDocumentOrderComparer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNodeDocumentOrderComparer.cs
    startLine: 14
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Contains functionality to compare nodes for their document order.

    This class cannot be inherited.
  example: []
  syntax:
    content: 'public sealed class XNodeDocumentOrderComparer : IComparer, IComparer<XNode>'
    content.vb: Public NotInheritable Class XNodeDocumentOrderComparer Inherits IComparer Implements IComparer(Of XNode)
  inheritance:
  - System.Object
  implements:
  - IComparer{System.Xml.Linq.XNode}
- uid: System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  id: Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNodeDocumentOrderComparer
  langs:
  - csharp
  - vb
  name: Compare(XNode, XNode)
  fullName: System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode, System.Xml.Linq.XNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XNodeDocumentOrderComparer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNodeDocumentOrderComparer.cs
    startLine: 31
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Compares two nodes to determine their relative XML document order.
  example: []
  syntax:
    content: public int Compare(XNode x, XNode y)
    content.vb: Public Function Compare(x As XNode, y As XNode) As Integer
    parameters:
    - id: x
      type: System.Xml.Linq.XNode
      description: The first node to compare.
    - id: y
      type: System.Xml.Linq.XNode
      description: The second node to compare.
    return:
      type: System.Int32
      description: >-
        0 if the nodes are equal;

        -1 if x is before y;

        1 if x is after y.
references:
- uid: System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: IComparer{System.Xml.Linq.XNode}
  definition: IComparer`1
  name: IComparer<XNode>
  fullName: IComparer<System.Xml.Linq.XNode>
  fullname.vb: IComparer(Of System.Xml.Linq.XNode)
  name.vb: IComparer(Of XNode)
  spec.csharp:
  - uid: IComparer`1
    name: IComparer
    fullName: IComparer
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IComparer`1
    name: IComparer
    fullName: IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
- uid: IComparer`1
  isExternal: true
  name: IComparer<>
  fullName: IComparer<>
  fullname.vb: IComparer(Of )
  name.vb: IComparer(Of )
  spec.csharp:
  - uid: IComparer`1
    name: IComparer
    fullName: IComparer
    isExternal: true
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IComparer`1
    name: IComparer
    fullName: IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode
  parent: System.Xml.Linq
  isExternal: false
  name: XNode
  fullName: System.Xml.Linq.XNode
- uid: System.Int32
  isExternal: true
  name: Int32
  fullName: System.Int32
