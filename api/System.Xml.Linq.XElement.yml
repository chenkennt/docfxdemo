items:
- uid: System.Xml.Linq.XElement
  id: XElement
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.XElement.#ctor
  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)
  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)
  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)
  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])
  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)
  - System.Xml.Linq.XElement.AncestorsAndSelf
  - System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)
  - System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)
  - System.Xml.Linq.XElement.Attributes
  - System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)
  - System.Xml.Linq.XElement.DescendantNodesAndSelf
  - System.Xml.Linq.XElement.DescendantsAndSelf
  - System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)
  - System.Xml.Linq.XElement.EmptySequence
  - System.Xml.Linq.XElement.FirstAttribute
  - System.Xml.Linq.XElement.GetDefaultNamespace
  - System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)
  - System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)
  - System.Xml.Linq.XElement.HasAttributes
  - System.Xml.Linq.XElement.HasElements
  - System.Xml.Linq.XElement.IsEmpty
  - System.Xml.Linq.XElement.LastAttribute
  - System.Xml.Linq.XElement.Load(Stream)
  - System.Xml.Linq.XElement.Load(Stream,System.Xml.Linq.LoadOptions)
  - System.Xml.Linq.XElement.Load(System.String)
  - System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)
  - System.Xml.Linq.XElement.Load(TextReader)
  - System.Xml.Linq.XElement.Load(TextReader,System.Xml.Linq.LoadOptions)
  - System.Xml.Linq.XElement.Load(XmlReader)
  - System.Xml.Linq.XElement.Load(XmlReader,System.Xml.Linq.LoadOptions)
  - System.Xml.Linq.XElement.Name
  - System.Xml.Linq.XElement.NodeType
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~DateTime
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~DateTimeOffset
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~Guid
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{DateTime}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{DateTimeOffset}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{Guid}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{TimeSpan}
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64
  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~TimeSpan
  - System.Xml.Linq.XElement.Parse(System.String)
  - System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)
  - System.Xml.Linq.XElement.RemoveAll
  - System.Xml.Linq.XElement.RemoveAttributes
  - System.Xml.Linq.XElement.ReplaceAll(System.Object)
  - System.Xml.Linq.XElement.ReplaceAll(System.Object[])
  - System.Xml.Linq.XElement.ReplaceAttributes(System.Object)
  - System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])
  - System.Xml.Linq.XElement.Save(Stream)
  - System.Xml.Linq.XElement.Save(Stream,System.Xml.Linq.SaveOptions)
  - System.Xml.Linq.XElement.Save(TextWriter)
  - System.Xml.Linq.XElement.Save(TextWriter,System.Xml.Linq.SaveOptions)
  - System.Xml.Linq.XElement.Save(XmlWriter)
  - System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)
  - System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)
  - System.Xml.Linq.XElement.SetValue(System.Object)
  - System.Xml.Linq.XElement.Value
  - System.Xml.Linq.XElement.WriteTo(XmlWriter)
  langs:
  - csharp
  - vb
  name: XElement
  fullName: System.Xml.Linq.XElement
  type: Class
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 30
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Represents an XML element.
  remarks: >-
    An element has an <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref>, optionally one or more attributes,

    and can optionally contain content (see <xref href="System.Xml.Linq.XContainer.Nodes" data-throw-if-not-resolved="false"></xref>.

    An <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> can contain the following types of content:

    <list><item>string (Text content)</item><item><xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref></item><item><xref href="System.Xml.Linq.XComment" data-throw-if-not-resolved="false"></xref></item><item><xref href="System.Xml.Linq.XProcessingInstruction" data-throw-if-not-resolved="false"></xref></item></list>
  example: []
  syntax:
    content: 'public class XElement : XContainer, IXmlSerializable'
    content.vb: Public Class XElement Inherits XContainer Implements IXmlSerializable
  inheritance:
  - System.Object
  - System.Xml.Linq.XObject
  - System.Xml.Linq.XNode
  - System.Xml.Linq.XContainer
  implements:
  - IXmlSerializable
  inheritedMembers:
  - System.Xml.Linq.XContainer.FirstNode
  - System.Xml.Linq.XContainer.LastNode
  - System.Xml.Linq.XContainer.Add(System.Object)
  - System.Xml.Linq.XContainer.Add(System.Object[])
  - System.Xml.Linq.XContainer.AddFirst(System.Object)
  - System.Xml.Linq.XContainer.AddFirst(System.Object[])
  - System.Xml.Linq.XContainer.CreateWriter
  - System.Xml.Linq.XContainer.DescendantNodes
  - System.Xml.Linq.XContainer.Descendants
  - System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  - System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  - System.Xml.Linq.XContainer.Elements
  - System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  - System.Xml.Linq.XContainer.Nodes
  - System.Xml.Linq.XContainer.RemoveNodes
  - System.Xml.Linq.XContainer.ReplaceNodes(System.Object)
  - System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])
  - System.Xml.Linq.XNode.NextNode
  - System.Xml.Linq.XNode.PreviousNode
  - System.Xml.Linq.XNode.DocumentOrderComparer
  - System.Xml.Linq.XNode.EqualityComparer
  - System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  - System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  - System.Xml.Linq.XNode.Ancestors
  - System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.CreateReader
  - System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  - System.Xml.Linq.XNode.NodesAfterSelf
  - System.Xml.Linq.XNode.NodesBeforeSelf
  - System.Xml.Linq.XNode.ElementsAfterSelf
  - System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.ElementsBeforeSelf
  - System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.ReadFrom(XmlReader)
  - System.Xml.Linq.XNode.Remove
  - System.Xml.Linq.XNode.ReplaceWith(System.Object)
  - System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  - System.Xml.Linq.XNode.ToString
  - System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  - System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  - System.Xml.Linq.XObject.BaseUri
  - System.Xml.Linq.XObject.Document
  - System.Xml.Linq.XObject.Parent
  - System.Xml.Linq.XObject.AddAnnotation(System.Object)
  - System.Xml.Linq.XObject.Annotation(Type)
  - System.Xml.Linq.XObject.Annotation``1
  - System.Xml.Linq.XObject.Annotations(Type)
  - System.Xml.Linq.XObject.Annotations``1
  - System.Xml.Linq.XObject.RemoveAnnotations(Type)
  - System.Xml.Linq.XObject.RemoveAnnotations``1
  - System.Xml.Linq.XObject.Changed
  - System.Xml.Linq.XObject.Changing
- uid: System.Xml.Linq.XElement.EmptySequence
  id: EmptySequence
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: EmptySequence
  fullName: System.Xml.Linq.XElement.EmptySequence
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 36
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Gets an empty collection of elements.
  example: []
  syntax:
    content: public static IEnumerable<XElement> EmptySequence { get; }
    content.vb: Public Shared ReadOnly Property EmptySequence As IEnumerable(Of XElement)
    parameters: []
    return:
      type: IEnumerable{System.Xml.Linq.XElement}
- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)
  id: '#ctor(System.Xml.Linq.XName)'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: XElement(XName)
  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 53
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Initializes a new instance of the XElement class with the specified name.
  example: []
  syntax:
    content: public XElement(XName name)
    content.vb: Public Sub New(name As XName)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: The name of the element.
- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)
  id: '#ctor(System.Xml.Linq.XName,System.Object)'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: XElement(XName, Object)
  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName, System.Object)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 70
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Initializes a new instance of the XElement class with the specified name and content.
  remarks: >-
    See XContainer.Add(object content) for details about the content that can be added

    using this method.
  example: []
  syntax:
    content: public XElement(XName name, object content)
    content.vb: Public Sub New(name As XName, content As Object)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: The element name.
    - id: content
      type: System.Object
      description: The initial contents of the element.
- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])
  id: '#ctor(System.Xml.Linq.XName,System.Object[])'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: XElement(XName, Object[])
  name.vb: XElement(XName, Object())
  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName, System.Object[])
  fullName.vb: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName, System.Object())
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 89
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Initializes a new instance of the XElement class with the specified name and content.
  remarks: >-
    See XContainer.Add(object content) for details about the content that can be added

    using this method.
  example: []
  syntax:
    content: public XElement(XName name, params object[] content)
    content.vb: Public Sub New(name As XName, ParamArray content As Object())
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: The element name.
    - id: content
      type: System.Object[]
      description: The initial content of the element.
- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)
  id: '#ctor(System.Xml.Linq.XElement)'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: XElement(XElement)
  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XElement)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 100
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Initializes a new instance of the XElement class from another XElement object.
  remarks: This constructor makes a deep copy from one element to another.
  example: []
  syntax:
    content: public XElement(XElement other)
    content.vb: Public Sub New(other As XElement)
    parameters:
    - id: other
      type: System.Xml.Linq.XElement
      description: Another element that will be copied to this element.
- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)
  id: '#ctor(System.Xml.Linq.XStreamingElement)'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: XElement(XStreamingElement)
  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XStreamingElement)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 122
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Initializes an XElement object from an <xref href="System.Xml.Linq.XStreamingElement" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public XElement(XStreamingElement other)
    content.vb: Public Sub New(other As XStreamingElement)
    parameters:
    - id: other
      type: System.Xml.Linq.XStreamingElement
      description: >-
        The <xref href="System.Xml.Linq.XStreamingElement" data-throw-if-not-resolved="false"></xref> object whose value will be used

        to initialize the new element.
- uid: System.Xml.Linq.XElement.#ctor
  id: '#ctor'
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: XElement()
  fullName: System.Xml.Linq.XElement.XElement()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 129
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: public XElement()
    content.vb: Public Sub New
- uid: System.Xml.Linq.XElement.FirstAttribute
  id: FirstAttribute
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: FirstAttribute
  fullName: System.Xml.Linq.XElement.FirstAttribute
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 147
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Gets the first attribute of an element.
  example: []
  syntax:
    content: public XAttribute FirstAttribute { get; }
    content.vb: Public ReadOnly Property FirstAttribute As XAttribute
    parameters: []
    return:
      type: System.Xml.Linq.XAttribute
- uid: System.Xml.Linq.XElement.HasAttributes
  id: HasAttributes
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: HasAttributes
  fullName: System.Xml.Linq.XElement.HasAttributes
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 155
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Gets a value indicating whether the element has at least one attribute.
  example: []
  syntax:
    content: public bool HasAttributes { get; }
    content.vb: Public ReadOnly Property HasAttributes As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Xml.Linq.XElement.HasElements
  id: HasElements
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: HasElements
  fullName: System.Xml.Linq.XElement.HasElements
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 163
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Gets a value indicating whether the element has at least one child element.
  example: []
  syntax:
    content: public bool HasElements { get; }
    content.vb: Public ReadOnly Property HasElements As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Xml.Linq.XElement.IsEmpty
  id: IsEmpty
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: IsEmpty
  fullName: System.Xml.Linq.XElement.IsEmpty
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 183
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Gets a value indicating whether the element contains no content.
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    content.vb: Public ReadOnly Property IsEmpty As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Xml.Linq.XElement.LastAttribute
  id: LastAttribute
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: LastAttribute
  fullName: System.Xml.Linq.XElement.LastAttribute
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 191
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Gets the last attribute of an element.
  example: []
  syntax:
    content: public XAttribute LastAttribute { get; }
    content.vb: Public ReadOnly Property LastAttribute As XAttribute
    parameters: []
    return:
      type: System.Xml.Linq.XAttribute
- uid: System.Xml.Linq.XElement.Name
  id: Name
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Xml.Linq.XElement.Name
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 199
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Gets the name of this element.
  example: []
  syntax:
    content: public XName Name { get; set; }
    content.vb: Public Property Name As XName
    parameters: []
    return:
      type: System.Xml.Linq.XName
- uid: System.Xml.Linq.XElement.NodeType
  id: NodeType
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: NodeType
  fullName: System.Xml.Linq.XElement.NodeType
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 220
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Gets the node type for this node.
  remarks: This property will always return XmlNodeType.Text.
  example: []
  syntax:
    content: public override XmlNodeType NodeType { get; }
    content.vb: Public Overrides ReadOnly Property NodeType As XmlNodeType
    parameters: []
    return:
      type: XmlNodeType
  overridden: System.Xml.Linq.XObject.NodeType
- uid: System.Xml.Linq.XElement.Value
  id: Value
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Xml.Linq.XElement.Value
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 235
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Gets the text contents of this element.
  remarks: >-
    If there is text content interspersed with nodes (mixed content) then the text content

    will be concatenated and returned.
  example: []
  syntax:
    content: public string Value { get; set; }
    content.vb: Public Property Value As String
    parameters: []
    return:
      type: System.String
- uid: System.Xml.Linq.XElement.AncestorsAndSelf
  id: AncestorsAndSelf
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: AncestorsAndSelf()
  fullName: System.Xml.Linq.XElement.AncestorsAndSelf()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 270
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> and all of it's ancestors up to

    the root node.

    <xref href="System.Xml.Linq.XNode.Ancestors" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public IEnumerable<XElement> AncestorsAndSelf()
    content.vb: Public Function AncestorsAndSelf As IEnumerable(Of XElement)
    return:
      type: IEnumerable{System.Xml.Linq.XElement}
      description: >-
        An <see cref="!:System.Collections.IEnumerable" /> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> containing all of

        this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>'s ancestors up to the root node (including

        this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.
- uid: System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)
  id: AncestorsAndSelf(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: AncestorsAndSelf(XName)
  fullName: System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 289
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns the ancestor(s) of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> with the matching

    <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref>. If this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>'s <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref>

    matches the <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> passed in then it will be included in the

    resulting <see cref="!:System.Collections.IEnumerable" /> or <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.

    <xref href="System.Xml.Linq.XNode.Ancestors" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public IEnumerable<XElement> AncestorsAndSelf(XName name)
    content.vb: Public Function AncestorsAndSelf(name As XName) As IEnumerable(Of XElement)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: The <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> of the target ancestor.
    return:
      type: IEnumerable{System.Xml.Linq.XElement}
      description: >-
        An <see cref="!:System.Collections.IEnumerable" /> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> containing the

        ancestors of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> with a matching <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref>.
- uid: System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)
  id: Attribute(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Attribute(XName)
  fullName: System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 305
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns the <xref href="System.Xml.Linq.XAttribute" data-throw-if-not-resolved="false"></xref> associated with this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that has this

    <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public XAttribute Attribute(XName name)
    content.vb: Public Function Attribute(name As XName) As XAttribute
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: The <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Xml.Linq.XAttribute" data-throw-if-not-resolved="false"></xref> to get.
    return:
      type: System.Xml.Linq.XAttribute
      description: >-
        The <xref href="System.Xml.Linq.XAttribute" data-throw-if-not-resolved="false"></xref> with the <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> passed in.  If there is no <xref href="System.Xml.Linq.XAttribute" data-throw-if-not-resolved="false"></xref>

        with this <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> then null is returned.
- uid: System.Xml.Linq.XElement.Attributes
  id: Attributes
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Attributes()
  fullName: System.Xml.Linq.XElement.Attributes()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 331
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns all of the <xref href="System.Xml.Linq.XAttribute" data-throw-if-not-resolved="false"></xref>s associated with this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.

    <xref href="System.Xml.Linq.XContainer.Elements" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public IEnumerable<XAttribute> Attributes()
    content.vb: Public Function Attributes As IEnumerable(Of XAttribute)
    return:
      type: IEnumerable{System.Xml.Linq.XAttribute}
      description: >-
        An <see cref="!:System.Collections.IEnumerable" /> of <xref href="System.Xml.Linq.XAttribute" data-throw-if-not-resolved="false"></xref> containing all of the <xref href="System.Xml.Linq.XAttribute" data-throw-if-not-resolved="false"></xref>s

        associated with this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.
- uid: System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)
  id: Attributes(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Attributes(XName)
  fullName: System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 347
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns the <xref href="System.Xml.Linq.XAttribute" data-throw-if-not-resolved="false"></xref>(s) associated with this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that has the passed

    in <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref>.

    <xref href="System.Xml.Linq.XElement.Attributes" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public IEnumerable<XAttribute> Attributes(XName name)
    content.vb: Public Function Attributes(name As XName) As IEnumerable(Of XAttribute)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: The <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> of the targeted <xref href="System.Xml.Linq.XAttribute" data-throw-if-not-resolved="false"></xref>.
    return:
      type: IEnumerable{System.Xml.Linq.XAttribute}
      description: The <xref href="System.Xml.Linq.XAttribute" data-throw-if-not-resolved="false"></xref>(s) with the matching
- uid: System.Xml.Linq.XElement.DescendantNodesAndSelf
  id: DescendantNodesAndSelf
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: DescendantNodesAndSelf()
  fullName: System.Xml.Linq.XElement.DescendantNodesAndSelf()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 356
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Get the self and descendant nodes for an <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public IEnumerable<XNode> DescendantNodesAndSelf()
    content.vb: Public Function DescendantNodesAndSelf As IEnumerable(Of XNode)
    return:
      type: IEnumerable{System.Xml.Linq.XNode}
- uid: System.Xml.Linq.XElement.DescendantsAndSelf
  id: DescendantsAndSelf
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: DescendantsAndSelf()
  fullName: System.Xml.Linq.XElement.DescendantsAndSelf()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 375
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> and all of it's descendant <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>s

    as an <see cref="!:System.Collections.IEnumerable" /> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.

    <xref href="System.Xml.Linq.XElement.DescendantsAndSelf" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public IEnumerable<XElement> DescendantsAndSelf()
    content.vb: Public Function DescendantsAndSelf As IEnumerable(Of XElement)
    return:
      type: IEnumerable{System.Xml.Linq.XElement}
      description: >-
        An <see cref="!:System.Collections.IEnumerable" /> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> containing this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>

        and all of it's descendants.
- uid: System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)
  id: DescendantsAndSelf(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: DescendantsAndSelf(XName)
  fullName: System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 392
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns the descendants of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that have a matching <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref>

    to the one passed in, including, potentially, this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.

    <xref href="System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public IEnumerable<XElement> DescendantsAndSelf(XName name)
    content.vb: Public Function DescendantsAndSelf(name As XName) As IEnumerable(Of XElement)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: The <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref> of the descendant <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> that is being targeted.
    return:
      type: IEnumerable{System.Xml.Linq.XElement}
      description: >-
        An <see cref="!:System.Collections.IEnumerable" /> of <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> containing all of the descendant

        <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>s that have this <xref href="System.Xml.Linq.XName" data-throw-if-not-resolved="false"></xref>.
- uid: System.Xml.Linq.XElement.GetDefaultNamespace
  id: GetDefaultNamespace
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: GetDefaultNamespace()
  fullName: System.Xml.Linq.XElement.GetDefaultNamespace()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 400
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns the default <xref href="System.Xml.Linq.XNamespace" data-throw-if-not-resolved="false"></xref> of an <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public XNamespace GetDefaultNamespace()
    content.vb: Public Function GetDefaultNamespace As XNamespace
    return:
      type: System.Xml.Linq.XNamespace
- uid: System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)
  id: GetNamespaceOfPrefix(System.String)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: GetNamespaceOfPrefix(String)
  fullName: System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 412
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Get the namespace associated with a particular prefix for this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>

    in its document context.
  example: []
  syntax:
    content: public XNamespace GetNamespaceOfPrefix(string prefix)
    content.vb: Public Function GetNamespaceOfPrefix(prefix As String) As XNamespace
    parameters:
    - id: prefix
      type: System.String
      description: The namespace prefix to look up
    return:
      type: System.Xml.Linq.XNamespace
      description: An <xref href="System.Xml.Linq.XNamespace" data-throw-if-not-resolved="false"></xref> for the namespace bound to the prefix
- uid: System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)
  id: GetPrefixOfNamespace(System.Xml.Linq.XNamespace)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: GetPrefixOfNamespace(XNamespace)
  fullName: System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 428
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Get the prefix associated with a namespace for an element in its context.
  example: []
  syntax:
    content: public string GetPrefixOfNamespace(XNamespace ns)
    content.vb: Public Function GetPrefixOfNamespace(ns As XNamespace) As String
    parameters:
    - id: ns
      type: System.Xml.Linq.XNamespace
      description: The <xref href="System.Xml.Linq.XNamespace" data-throw-if-not-resolved="false"></xref> for which to get a prefix
    return:
      type: System.String
      description: The namespace prefix string
- uid: System.Xml.Linq.XElement.Load(System.String)
  id: Load(System.String)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Load(String)
  fullName: System.Xml.Linq.XElement.Load(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 505
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Create a new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> based on the contents of the file

    referenced by the URI parameter passed in.  Note: Use

    <xref href="System.Xml.Linq.XElement.Parse(System.String)" data-throw-if-not-resolved="false"></xref> to create an <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> from

    a string containing XML.

    <seealso cref="!:XmlReader.Create(string)" /><xref href="System.Xml.Linq.XElement.Parse(System.String)" data-throw-if-not-resolved="false"></xref><xref href="System.Xml.Linq.XDocument.Parse(System.String)" data-throw-if-not-resolved="false"></xref>
  remarks: >-
    This method uses the <see cref="!:XmlReader.Create(string)" /> method to create

    an <see cref="!:XmlReader" /> to read the raw XML into the underlying

    XML tree.
  example: []
  syntax:
    content: public static XElement Load(string uri)
    content.vb: Public Shared Function Load(uri As String) As XElement
    parameters:
    - id: uri
      type: System.String
      description: A URI string referencing the file to load into a new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.Linq.XElement
      description: >-
        An <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> initialized with the contents of the file referenced

        in the passed in uri parameter.
- uid: System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)
  id: Load(System.String,System.Xml.Linq.LoadOptions)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Load(String, LoadOptions)
  fullName: System.Xml.Linq.XElement.Load(System.String, System.Xml.Linq.LoadOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 535
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Create a new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> based on the contents of the file

    referenced by the URI parameter passed in.  Optionally, whitespace can be preserved.

    <see cref="!:XmlReader.Create(string)" /><xref href="System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)" data-throw-if-not-resolved="false"></xref>
  remarks: >-
    This method uses the <see cref="!:XmlReader.Create(string)" /> method to create

    an <see cref="!:XmlReader" /> to read the raw XML into an underlying

    XML tree. If LoadOptions.PreserveWhitespace is enabled then

    the <see cref="!:XmlReaderSettings" /> property <see cref="!:XmlReaderSettings.IgnoreWhitespace" />

    is set to false.
  example: []
  syntax:
    content: public static XElement Load(string uri, LoadOptions options)
    content.vb: Public Shared Function Load(uri As String, options As LoadOptions) As XElement
    parameters:
    - id: uri
      type: System.String
      description: A string representing the URI of the file to be loaded into a new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.
    - id: options
      type: System.Xml.Linq.LoadOptions
      description: A set of <xref href="System.Xml.Linq.LoadOptions" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.Linq.XElement
      description: >-
        An <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> initialized with the contents of the file referenced

        in the passed uri parameter.  If LoadOptions.PreserveWhitespace is enabled then

        significant whitespace will be preserved.
- uid: System.Xml.Linq.XElement.Load(Stream)
  id: Load(Stream)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Load(Stream)
  fullName: System.Xml.Linq.XElement.Load(Stream)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 557
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Create a new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> and initialize its underlying XML tree using

    the passed <see cref="!:Stream" /> parameter.
  example: []
  syntax:
    content: public static XElement Load(Stream stream)
    content.vb: Public Shared Function Load(stream As Stream) As XElement
    parameters:
    - id: stream
      type: Stream
      description: >-
        A <see cref="!:Stream" /> containing the raw XML to read into the newly

        created <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.Linq.XElement
      description: >-
        A new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> containing the contents of the passed in

        <see cref="!:Stream" />.
- uid: System.Xml.Linq.XElement.Load(Stream,System.Xml.Linq.LoadOptions)
  id: Load(Stream,System.Xml.Linq.LoadOptions)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Load(Stream, LoadOptions)
  fullName: System.Xml.Linq.XElement.Load(Stream, System.Xml.Linq.LoadOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 583
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Create a new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> and initialize its underlying XML tree using

    the passed <see cref="!:Stream" /> parameter.  Optionally whitespace handling

    can be preserved.
  remarks: >-
    If LoadOptions.PreserveWhitespace is enabled then

    the <see cref="!:XmlReaderSettings" /> property <see cref="!:XmlReaderSettings.IgnoreWhitespace" />

    is set to false.
  example: []
  syntax:
    content: public static XElement Load(Stream stream, LoadOptions options)
    content.vb: Public Shared Function Load(stream As Stream, options As LoadOptions) As XElement
    parameters:
    - id: stream
      type: Stream
      description: >-
        A <see cref="!:Stream" /> containing the raw XML to read into the newly

        created <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.
    - id: options
      type: System.Xml.Linq.LoadOptions
      description: A set of <xref href="System.Xml.Linq.LoadOptions" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.Linq.XElement
      description: >-
        A new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> containing the contents of the passed in

        <see cref="!:Stream" />.
- uid: System.Xml.Linq.XElement.Load(TextReader)
  id: Load(TextReader)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Load(TextReader)
  fullName: System.Xml.Linq.XElement.Load(TextReader)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 603
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Create a new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> and initialize its underlying XML tree using

    the passed <see cref="!:TextReader" /> parameter.
  example: []
  syntax:
    content: public static XElement Load(TextReader textReader)
    content.vb: Public Shared Function Load(textReader As TextReader) As XElement
    parameters:
    - id: textReader
      type: TextReader
      description: >-
        A <see cref="!:TextReader" /> containing the raw XML to read into the newly

        created <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.Linq.XElement
      description: >-
        A new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> containing the contents of the passed in

        <see cref="!:TextReader" />.
- uid: System.Xml.Linq.XElement.Load(TextReader,System.Xml.Linq.LoadOptions)
  id: Load(TextReader,System.Xml.Linq.LoadOptions)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Load(TextReader, LoadOptions)
  fullName: System.Xml.Linq.XElement.Load(TextReader, System.Xml.Linq.LoadOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 629
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Create a new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> and initialize its underlying XML tree using

    the passed <see cref="!:TextReader" /> parameter.  Optionally whitespace handling

    can be preserved.
  remarks: >-
    If LoadOptions.PreserveWhitespace is enabled then

    the <see cref="!:XmlReaderSettings" /> property <see cref="!:XmlReaderSettings.IgnoreWhitespace" />

    is set to false.
  example: []
  syntax:
    content: public static XElement Load(TextReader textReader, LoadOptions options)
    content.vb: Public Shared Function Load(textReader As TextReader, options As LoadOptions) As XElement
    parameters:
    - id: textReader
      type: TextReader
      description: >-
        A <see cref="!:TextReader" /> containing the raw XML to read into the newly

        created <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.
    - id: options
      type: System.Xml.Linq.LoadOptions
      description: A set of <xref href="System.Xml.Linq.LoadOptions" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.Linq.XElement
      description: >-
        A new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> containing the contents of the passed in

        <see cref="!:TextReader" />.
- uid: System.Xml.Linq.XElement.Load(XmlReader)
  id: Load(XmlReader)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Load(XmlReader)
  fullName: System.Xml.Linq.XElement.Load(XmlReader)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 650
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Create a new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> containing the contents of the

    passed in <see cref="!:XmlReader" />.
  example: []
  syntax:
    content: public static XElement Load(XmlReader reader)
    content.vb: Public Shared Function Load(reader As XmlReader) As XElement
    parameters:
    - id: reader
      type: XmlReader
      description: >-
        An <see cref="!:XmlReader" /> containing the XML to be read into the new

        <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.Linq.XElement
      description: >-
        A new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> containing the contents of the passed

        in <see cref="!:XmlReader" />.
- uid: System.Xml.Linq.XElement.Load(XmlReader,System.Xml.Linq.LoadOptions)
  id: Load(XmlReader,System.Xml.Linq.LoadOptions)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Load(XmlReader, LoadOptions)
  fullName: System.Xml.Linq.XElement.Load(XmlReader, System.Xml.Linq.LoadOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 670
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Create a new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> containing the contents of the

    passed in <see cref="!:XmlReader" />.
  example: []
  syntax:
    content: public static XElement Load(XmlReader reader, LoadOptions options)
    content.vb: Public Shared Function Load(reader As XmlReader, options As LoadOptions) As XElement
    parameters:
    - id: reader
      type: XmlReader
      description: >-
        An <see cref="!:XmlReader" /> containing the XML to be read into the new

        <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.
    - id: options
      type: System.Xml.Linq.LoadOptions
      description: A set of <xref href="System.Xml.Linq.LoadOptions" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.Linq.XElement
      description: >-
        A new <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> containing the contents of the passed

        in <see cref="!:XmlReader" />.
- uid: System.Xml.Linq.XElement.Parse(System.String)
  id: Parse(System.String)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.Xml.Linq.XElement.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 696
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Parses a string containing XML into an <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.
  remarks: The XML must contain only one root node.
  example: []
  syntax:
    content: public static XElement Parse(string text)
    content.vb: Public Shared Function Parse(text As String) As XElement
    parameters:
    - id: text
      type: System.String
      description: A string containing the XML to parse into an <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.Linq.XElement
      description: An <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> created from the XML string passed in.
- uid: System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)
  id: Parse(System.String,System.Xml.Linq.LoadOptions)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Parse(String, LoadOptions)
  fullName: System.Xml.Linq.XElement.Parse(System.String, System.Xml.Linq.LoadOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 724
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Parses a string containing XML into an <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> and optionally

    preserves the Whitespace. See <see cref="!:XmlReaderSettings.IgnoreWhitespace" />.
  remarks: >-
    <list>

    <item>The XML must contain only one root node.</item>

    <item>

    If LoadOptions.PreserveWhitespace is enabled the underlying

    <see cref="!:XmlReaderSettings" />'

    property <see cref="!:XmlReaderSettings.IgnoreWhitespace" /> will be set to false.

    </item>

    </list>
  example: []
  syntax:
    content: public static XElement Parse(string text, LoadOptions options)
    content.vb: Public Shared Function Parse(text As String, options As LoadOptions) As XElement
    parameters:
    - id: text
      type: System.String
      description: A string containing the XML to parse into an <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.
    - id: options
      type: System.Xml.Linq.LoadOptions
      description: A set of <xref href="System.Xml.Linq.LoadOptions" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.Linq.XElement
      description: An <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> created from the XML string passed in.
- uid: System.Xml.Linq.XElement.RemoveAll
  id: RemoveAll
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: RemoveAll()
  fullName: System.Xml.Linq.XElement.RemoveAll()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 741
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Removes content and attributes from this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.

    <xref href="System.Xml.Linq.XElement.RemoveAttributes" data-throw-if-not-resolved="false"></xref><xref href="System.Xml.Linq.XContainer.RemoveNodes" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void RemoveAll()
    content.vb: Public Sub RemoveAll
- uid: System.Xml.Linq.XElement.RemoveAttributes
  id: RemoveAttributes
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: RemoveAttributes()
  fullName: System.Xml.Linq.XElement.RemoveAttributes()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 752
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Removes that attributes of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>.

    <xref href="System.Xml.Linq.XElement.RemoveAll" data-throw-if-not-resolved="false"></xref><xref href="System.Xml.Linq.XElement.RemoveAttributes" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void RemoveAttributes()
    content.vb: Public Sub RemoveAttributes
- uid: System.Xml.Linq.XElement.ReplaceAll(System.Object)
  id: ReplaceAll(System.Object)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: ReplaceAll(Object)
  fullName: System.Xml.Linq.XElement.ReplaceAll(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 793
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Replaces the children nodes and the attributes of this element with the specified content.
  remarks: >-
    See XContainer.Add(object content) for details about the content that can be added

    using this method.
  example: []
  syntax:
    content: public void ReplaceAll(object content)
    content.vb: Public Sub ReplaceAll(content As Object)
    parameters:
    - id: content
      type: System.Object
      description: The content that will replace the child nodes and attributes of this element.
- uid: System.Xml.Linq.XElement.ReplaceAll(System.Object[])
  id: ReplaceAll(System.Object[])
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: ReplaceAll(Object[])
  name.vb: ReplaceAll(Object())
  fullName: System.Xml.Linq.XElement.ReplaceAll(System.Object[])
  fullName.vb: System.Xml.Linq.XElement.ReplaceAll(System.Object())
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 810
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Replaces the children nodes and the attributes of this element with the specified content.
  remarks: >-
    See XContainer.Add(object content) for details about the content that can be added

    using this method.
  example: []
  syntax:
    content: public void ReplaceAll(params object[] content)
    content.vb: Public Sub ReplaceAll(ParamArray content As Object())
    parameters:
    - id: content
      type: System.Object[]
      description: A parameter list of content objects.
- uid: System.Xml.Linq.XElement.ReplaceAttributes(System.Object)
  id: ReplaceAttributes(System.Object)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: ReplaceAttributes(Object)
  fullName: System.Xml.Linq.XElement.ReplaceAttributes(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 830
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Replaces the attributes of this element with the specified content.
  remarks: >-
    See XContainer.Add(object content) for details about the content that can be added

    using this method.
  example: []
  syntax:
    content: public void ReplaceAttributes(object content)
    content.vb: Public Sub ReplaceAttributes(content As Object)
    parameters:
    - id: content
      type: System.Object
      description: The content that will replace the attributes of this element.
- uid: System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])
  id: ReplaceAttributes(System.Object[])
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: ReplaceAttributes(Object[])
  name.vb: ReplaceAttributes(Object())
  fullName: System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])
  fullName.vb: System.Xml.Linq.XElement.ReplaceAttributes(System.Object())
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 847
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Replaces the attributes of this element with the specified content.
  remarks: >-
    See XContainer.Add(object content) for details about the content that can be added

    using this method.
  example: []
  syntax:
    content: public void ReplaceAttributes(params object[] content)
    content.vb: Public Sub ReplaceAttributes(ParamArray content As Object())
    parameters:
    - id: content
      type: System.Object[]
      description: A parameter list of content objects.
- uid: System.Xml.Linq.XElement.Save(Stream)
  id: Save(Stream)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Save(Stream)
  fullName: System.Xml.Linq.XElement.Save(Stream)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 867
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Output this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to the passed in <see cref="!:Stream" />.
  remarks: >-
    The format will be indented by default.  If you want

    no indenting then use the SaveOptions version of Save (see

    <xref href="System.Xml.Linq.XElement.Save(Stream,System.Xml.Linq.SaveOptions)" data-throw-if-not-resolved="false"></xref>) enabling

    SaveOptions.DisableFormatting.

    There is also an option SaveOptions.OmitDuplicateNamespaces for removing duplicate namespace declarations.

    Or instead use the SaveOptions as an annotation on this node or its ancestors, then this method will use those options.
  example: []
  syntax:
    content: public void Save(Stream stream)
    content.vb: Public Sub Save(stream As Stream)
    parameters:
    - id: stream
      type: Stream
      description: The <see cref="!:Stream" /> to output this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to.
- uid: System.Xml.Linq.XElement.Save(Stream,System.Xml.Linq.SaveOptions)
  id: Save(Stream,System.Xml.Linq.SaveOptions)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Save(Stream, SaveOptions)
  fullName: System.Xml.Linq.XElement.Save(Stream, System.Xml.Linq.SaveOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 882
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Output this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to a <see cref="!:Stream" />.
  example: []
  syntax:
    content: public void Save(Stream stream, SaveOptions options)
    content.vb: Public Sub Save(stream As Stream, options As SaveOptions)
    parameters:
    - id: stream
      type: Stream
      description: The <see cref="!:Stream" /> to output the XML to.
    - id: options
      type: System.Xml.Linq.SaveOptions
      description: >-
        If SaveOptions.DisableFormatting is enabled the output is not indented.

        If SaveOptions.OmitDuplicateNamespaces is enabled duplicate namespace declarations will be removed.
- uid: System.Xml.Linq.XElement.Save(TextWriter)
  id: Save(TextWriter)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Save(TextWriter)
  fullName: System.Xml.Linq.XElement.Save(TextWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 905
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Output this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to the passed in <see cref="!:TextWriter" />.
  remarks: >-
    The format will be indented by default.  If you want

    no indenting then use the SaveOptions version of Save (see

    <xref href="System.Xml.Linq.XElement.Save(TextWriter,System.Xml.Linq.SaveOptions)" data-throw-if-not-resolved="false"></xref>) enabling

    SaveOptions.DisableFormatting.

    There is also an option SaveOptions.OmitDuplicateNamespaces for removing duplicate namespace declarations.

    Or instead use the SaveOptions as an annotation on this node or its ancestors, then this method will use those options.
  example: []
  syntax:
    content: public void Save(TextWriter textWriter)
    content.vb: Public Sub Save(textWriter As TextWriter)
    parameters:
    - id: textWriter
      type: TextWriter
      description: The <see cref="!:TextWriter" /> to output this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to.
- uid: System.Xml.Linq.XElement.Save(TextWriter,System.Xml.Linq.SaveOptions)
  id: Save(TextWriter,System.Xml.Linq.SaveOptions)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Save(TextWriter, SaveOptions)
  fullName: System.Xml.Linq.XElement.Save(TextWriter, System.Xml.Linq.SaveOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 920
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Output this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to a <see cref="!:TextWriter" />.
  example: []
  syntax:
    content: public void Save(TextWriter textWriter, SaveOptions options)
    content.vb: Public Sub Save(textWriter As TextWriter, options As SaveOptions)
    parameters:
    - id: textWriter
      type: TextWriter
      description: The <see cref="!:TextWriter" /> to output the XML to.
    - id: options
      type: System.Xml.Linq.SaveOptions
      description: >-
        If SaveOptions.DisableFormatting is enabled the output is not indented.

        If SaveOptions.OmitDuplicateNamespaces is enabled duplicate namespace declarations will be removed.
- uid: System.Xml.Linq.XElement.Save(XmlWriter)
  id: Save(XmlWriter)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Save(XmlWriter)
  fullName: System.Xml.Linq.XElement.Save(XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 935
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Output this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to an <see cref="!:XmlWriter" />.
  example: []
  syntax:
    content: public void Save(XmlWriter writer)
    content.vb: Public Sub Save(writer As XmlWriter)
    parameters:
    - id: writer
      type: XmlWriter
      description: The <see cref="!:XmlWriter" /> to output the XML to.
- uid: System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)
  id: SetAttributeValue(System.Xml.Linq.XName,System.Object)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: SetAttributeValue(XName, Object)
  fullName: System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 962
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Sets the value of an attribute. The value is assigned to the attribute with the given

    name. If no attribute with the given name exists, a new attribute is added. If the

    value is null, the attribute with the given name, if any, is deleted.

    <xref href="System.Xml.Linq.XAttribute.SetValue(System.Object)" data-throw-if-not-resolved="false"></xref><xref href="System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)" data-throw-if-not-resolved="false"></xref><xref href="System.Xml.Linq.XElement.SetValue(System.Object)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void SetAttributeValue(XName name, object value)
    content.vb: Public Sub SetAttributeValue(name As XName, value As Object)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: The name of the attribute whose value to change.
    - id: value
      type: System.Object
      description: >-
        The value to assign to the attribute. The attribute is deleted if the value is null.

        Otherwise, the value is converted to its string representation and assigned to the

        <xref href="System.Xml.Linq.XElement.Value" data-throw-if-not-resolved="false"></xref> property of the attribute.
- uid: System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)
  id: SetElementValue(System.Xml.Linq.XName,System.Object)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: SetElementValue(XName, Object)
  fullName: System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1002
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Sets the value of a child element. The value is assigned to the first child element

    with the given name. If no child element with the given name exists, a new child

    element is added. If the value is null, the first child element with the given name,

    if any, is deleted.

    <xref href="System.Xml.Linq.XAttribute.SetValue(System.Object)" data-throw-if-not-resolved="false"></xref><xref href="System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)" data-throw-if-not-resolved="false"></xref><xref href="System.Xml.Linq.XElement.SetValue(System.Object)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void SetElementValue(XName name, object value)
    content.vb: Public Sub SetElementValue(name As XName, value As Object)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: The name of the child element whose value to change.
    - id: value
      type: System.Object
      description: >-
        The value to assign to the child element. The child element is deleted if the value

        is null. Otherwise, the value is converted to its string representation and assigned

        to the <xref href="System.Xml.Linq.XElement.Value" data-throw-if-not-resolved="false"></xref> property of the child element.
- uid: System.Xml.Linq.XElement.SetValue(System.Object)
  id: SetValue(System.Object)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: SetValue(Object)
  fullName: System.Xml.Linq.XElement.SetValue(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1035
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Sets the value of this element.

    <xref href="System.Xml.Linq.XAttribute.SetValue(System.Object)" data-throw-if-not-resolved="false"></xref><xref href="System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)" data-throw-if-not-resolved="false"></xref><xref href="System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void SetValue(object value)
    content.vb: Public Sub SetValue(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: >-
        The value to assign to this element. The value is converted to its string representation

        and assigned to the <xref href="System.Xml.Linq.XElement.Value" data-throw-if-not-resolved="false"></xref> property.
- uid: System.Xml.Linq.XElement.WriteTo(XmlWriter)
  id: WriteTo(XmlWriter)
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter)
  fullName: System.Xml.Linq.XElement.WriteTo(XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1047
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Write this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to the passed in <see cref="!:XmlWriter" />.
  example: []
  syntax:
    content: public override void WriteTo(XmlWriter writer)
    content.vb: Public Overrides Sub WriteTo(writer As XmlWriter)
    parameters:
    - id: writer
      type: XmlWriter
      description: The <see cref="!:XmlWriter" /> to write this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to.
  overridden: System.Xml.Linq.XNode.WriteTo(XmlWriter)
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String
  id: op_Explicit(System.Xml.Linq.XElement)~System.String
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to String)
  name.vb: Narrowing(XElement to String)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.String)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.String)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1068
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to a <see cref="!:System.String" />.
  remarks: >-
    If the <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> is a subtree (an <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>

    that has <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> children.  The concatenated string

    value of all of the <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref>'s text and descendants

    text is returned.
  example: []
  syntax:
    content: public static explicit operator string (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As String
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to a string.
    return:
      type: System.String
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.String" />.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean
  id: op_Explicit(System.Xml.Linq.XElement)~System.Boolean
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Boolean)
  name.vb: Narrowing(XElement to Boolean)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Boolean)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Boolean)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1091
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to a <see cref="!:System.Boolean" />.
  example: []
  syntax:
    content: public static explicit operator bool (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Boolean
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.Boolean" />.
    return:
      type: System.Boolean
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.Boolean" />.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<Boolean>)
  name.vb: Narrowing(XElement to Nullable(Of Boolean))
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Boolean>)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Boolean))
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1111
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to a <see cref="!:System.Boolean" />?.
  example: []
  syntax:
    content: public static explicit operator bool ? (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Boolean?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.Boolean" />?.
    return:
      type: System.Nullable{System.Boolean}
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.Boolean" />?.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32
  id: op_Explicit(System.Xml.Linq.XElement)~System.Int32
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Int32)
  name.vb: Narrowing(XElement to Int32)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Int32)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Int32)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1134
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to an <see cref="!:System.Int32" />.
  example: []
  syntax:
    content: public static explicit operator int (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Integer
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.Int32" />.
    return:
      type: System.Int32
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.Int32" />.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<Int32>)
  name.vb: Narrowing(XElement to Nullable(Of Int32))
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Int32>)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Int32))
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1154
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to an <see cref="!:System.Int32" />?.
  example: []
  syntax:
    content: public static explicit operator int ? (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Integer?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.Int32" />?.
    return:
      type: System.Nullable{System.Int32}
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.Int32" />?.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32
  id: op_Explicit(System.Xml.Linq.XElement)~System.UInt32
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to UInt32)
  name.vb: Narrowing(XElement to UInt32)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.UInt32)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.UInt32)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1177
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to an <see cref="!:System.UInt32" />.
  example: []
  syntax:
    content: public static explicit operator uint (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As UInteger
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.UInt32" />.
    return:
      type: System.UInt32
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.UInt32" />.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<UInt32>)
  name.vb: Narrowing(XElement to Nullable(Of UInt32))
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.UInt32>)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.UInt32))
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1197
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to an <see cref="!:System.UInt32" />?.
  example: []
  syntax:
    content: public static explicit operator uint ? (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As UInteger?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.UInt32" />?.
    return:
      type: System.Nullable{System.UInt32}
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.UInt32" />?.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64
  id: op_Explicit(System.Xml.Linq.XElement)~System.Int64
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Int64)
  name.vb: Narrowing(XElement to Int64)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Int64)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Int64)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1220
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to a <see cref="!:System.Int64" />.
  example: []
  syntax:
    content: public static explicit operator long (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Long
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.Int64" />.
    return:
      type: System.Int64
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.Int64" />.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<Int64>)
  name.vb: Narrowing(XElement to Nullable(Of Int64))
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Int64>)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Int64))
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1240
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to a <see cref="!:System.Int64" />?.
  example: []
  syntax:
    content: public static explicit operator long ? (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Long?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.Int64" />?.
    return:
      type: System.Nullable{System.Int64}
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.Int64" />?.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64
  id: op_Explicit(System.Xml.Linq.XElement)~System.UInt64
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to UInt64)
  name.vb: Narrowing(XElement to UInt64)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.UInt64)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.UInt64)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1263
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to an <see cref="!:System.UInt64" />.
  example: []
  syntax:
    content: public static explicit operator ulong (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As ULong
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.UInt64" />.
    return:
      type: System.UInt64
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.UInt64" />.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<UInt64>)
  name.vb: Narrowing(XElement to Nullable(Of UInt64))
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.UInt64>)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.UInt64))
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1283
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to an <see cref="!:System.UInt64" />?.
  example: []
  syntax:
    content: public static explicit operator ulong ? (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As ULong?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.UInt64" />?.
    return:
      type: System.Nullable{System.UInt64}
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.UInt64" />?.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single
  id: op_Explicit(System.Xml.Linq.XElement)~System.Single
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Single)
  name.vb: Narrowing(XElement to Single)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Single)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Single)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1306
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to a <see cref="!:System.Single" />.
  example: []
  syntax:
    content: public static explicit operator float (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Single
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.Single" />.
    return:
      type: System.Single
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.Single" />.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<Single>)
  name.vb: Narrowing(XElement to Nullable(Of Single))
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Single>)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Single))
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1326
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to an <see cref="!:System.Single" />?.
  example: []
  syntax:
    content: public static explicit operator float ? (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Single?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.Single" />?.
    return:
      type: System.Nullable{System.Single}
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.Single" />?.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double
  id: op_Explicit(System.Xml.Linq.XElement)~System.Double
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Double)
  name.vb: Narrowing(XElement to Double)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Double)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Double)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1349
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to a <see cref="!:System.Double" />.
  example: []
  syntax:
    content: public static explicit operator double (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Double
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.Double" />.
    return:
      type: System.Double
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.Double" />.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<Double>)
  name.vb: Narrowing(XElement to Nullable(Of Double))
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Double>)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Double))
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1369
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to an <see cref="!:System.Double" />?.
  example: []
  syntax:
    content: public static explicit operator double ? (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Double?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.Double" />?.
    return:
      type: System.Nullable{System.Double}
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.Double" />?.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal
  id: op_Explicit(System.Xml.Linq.XElement)~System.Decimal
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Decimal)
  name.vb: Narrowing(XElement to Decimal)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Decimal)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1392
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to a <see cref="!:System.Decimal" />.
  example: []
  syntax:
    content: public static explicit operator decimal (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Decimal
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.Decimal" />.
    return:
      type: System.Decimal
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.Decimal" />.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<Decimal>)
  name.vb: Narrowing(XElement to Nullable(Of Decimal))
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Decimal>)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Decimal))
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1412
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to an <see cref="!:System.Decimal" />?.
  example: []
  syntax:
    content: public static explicit operator decimal ? (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Decimal?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:System.Decimal" />?.
    return:
      type: System.Nullable{System.Decimal}
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:System.Decimal" />?.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~DateTime
  id: op_Explicit(System.Xml.Linq.XElement)~DateTime
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to DateTime)
  name.vb: Narrowing(XElement to DateTime)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to DateTime)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to DateTime)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1435
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to a <see cref="!:DateTime" />.
  example: []
  syntax:
    content: public static explicit operator DateTime(XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As DateTime
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:DateTime" />.
    return:
      type: DateTime
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:DateTime" />.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{DateTime}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{DateTime}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<DateTime>)
  name.vb: Narrowing(XElement to Nullable(Of DateTime))
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<DateTime>)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of DateTime))
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1455
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to an <see cref="!:DateTime" />?.
  example: []
  syntax:
    content: public static explicit operator DateTime? (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As DateTime?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:DateTime" />?.
    return:
      type: System.Nullable{DateTime}
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:DateTime" />?.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~DateTimeOffset
  id: op_Explicit(System.Xml.Linq.XElement)~DateTimeOffset
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to DateTimeOffset)
  name.vb: Narrowing(XElement to DateTimeOffset)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to DateTimeOffset)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1478
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to a <see cref="!:DateTimeOffset" />.
  example: []
  syntax:
    content: public static explicit operator DateTimeOffset(XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As DateTimeOffset
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:DateTimeOffset" />.
    return:
      type: DateTimeOffset
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:DateTimeOffset" />.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{DateTimeOffset}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{DateTimeOffset}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<DateTimeOffset>)
  name.vb: Narrowing(XElement to Nullable(Of DateTimeOffset))
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<DateTimeOffset>)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of DateTimeOffset))
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1498
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to an <see cref="!:DateTimeOffset" />?.
  example: []
  syntax:
    content: public static explicit operator DateTimeOffset? (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As DateTimeOffset?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:DateTimeOffset" />?.
    return:
      type: System.Nullable{DateTimeOffset}
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:DateTimeOffset" />?.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~TimeSpan
  id: op_Explicit(System.Xml.Linq.XElement)~TimeSpan
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to TimeSpan)
  name.vb: Narrowing(XElement to TimeSpan)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to TimeSpan)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1521
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to a <see cref="!:TimeSpan" />.
  example: []
  syntax:
    content: public static explicit operator TimeSpan(XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As TimeSpan
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:TimeSpan" />.
    return:
      type: TimeSpan
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:TimeSpan" />.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{TimeSpan}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{TimeSpan}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<TimeSpan>)
  name.vb: Narrowing(XElement to Nullable(Of TimeSpan))
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<TimeSpan>)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of TimeSpan))
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1541
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to an <see cref="!:TimeSpan" />?.
  example: []
  syntax:
    content: public static explicit operator TimeSpan? (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As TimeSpan?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:TimeSpan" />?.
    return:
      type: System.Nullable{TimeSpan}
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:TimeSpan" />?.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~Guid
  id: op_Explicit(System.Xml.Linq.XElement)~Guid
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Guid)
  name.vb: Narrowing(XElement to Guid)
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to Guid)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to Guid)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1564
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to a <see cref="!:Guid" />.
  example: []
  syntax:
    content: public static explicit operator Guid(XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Guid
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:Guid" />.
    return:
      type: Guid
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:Guid" />.
- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{Guid}
  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{Guid}
  parent: System.Xml.Linq.XElement
  langs:
  - csharp
  - vb
  name: Explicit(XElement to Nullable<Guid>)
  name.vb: Narrowing(XElement to Nullable(Of Guid))
  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<Guid>)
  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of Guid))
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XElement.cs
    startLine: 1584
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Cast the value of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to an <see cref="!:Guid" />?.
  example: []
  syntax:
    content: public static explicit operator Guid? (XElement element)
    content.vb: Public Shared Narrowing Operator CType(element As XElement) As Guid?
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> to cast to <see cref="!:Guid" />?.
    return:
      type: System.Nullable{Guid}
      description: The content of this <xref href="System.Xml.Linq.XElement" data-throw-if-not-resolved="false"></xref> as a <see cref="!:Guid" />?.
references:
- uid: System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: false
  name: XName
  fullName: System.Xml.Linq.XName
- uid: System.Xml.Linq.XContainer.Nodes
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: Nodes()
  fullName: System.Xml.Linq.XContainer.Nodes()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Nodes
    name: Nodes
    fullName: System.Xml.Linq.XContainer.Nodes
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Nodes
    name: Nodes
    fullName: System.Xml.Linq.XContainer.Nodes
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: false
  name: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Xml.Linq.XComment
  parent: System.Xml.Linq
  isExternal: false
  name: XComment
  fullName: System.Xml.Linq.XComment
- uid: System.Xml.Linq.XProcessingInstruction
  parent: System.Xml.Linq
  isExternal: false
  name: XProcessingInstruction
  fullName: System.Xml.Linq.XProcessingInstruction
- uid: System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Object
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Xml.Linq.XObject
  parent: System.Xml.Linq
  isExternal: false
  name: XObject
  fullName: System.Xml.Linq.XObject
- uid: System.Xml.Linq.XNode
  parent: System.Xml.Linq
  isExternal: false
  name: XNode
  fullName: System.Xml.Linq.XNode
- uid: System.Xml.Linq.XContainer
  parent: System.Xml.Linq
  isExternal: false
  name: XContainer
  fullName: System.Xml.Linq.XContainer
- uid: IXmlSerializable
  isExternal: true
  name: IXmlSerializable
  fullName: IXmlSerializable
- uid: System.Xml.Linq.XContainer.FirstNode
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: FirstNode
  fullName: System.Xml.Linq.XContainer.FirstNode
- uid: System.Xml.Linq.XContainer.LastNode
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: LastNode
  fullName: System.Xml.Linq.XContainer.LastNode
- uid: System.Xml.Linq.XContainer.Add(System.Object)
  parent: System.Xml.Linq.XContainer
  isExternal: true
  name: Add(Object)
  fullName: System.Xml.Linq.XContainer.Add(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Add(System.Object)
    name: Add
    fullName: System.Xml.Linq.XContainer.Add
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Add(System.Object)
    name: Add
    fullName: System.Xml.Linq.XContainer.Add
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XContainer.Add(System.Object[])
  parent: System.Xml.Linq.XContainer
  isExternal: true
  name: Add(Object[])
  fullName: System.Xml.Linq.XContainer.Add(System.Object[])
  fullname.vb: System.Xml.Linq.XContainer.Add(System.Object())
  name.vb: Add(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Add(System.Object[])
    name: Add
    fullName: System.Xml.Linq.XContainer.Add
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Add(System.Object[])
    name: Add
    fullName: System.Xml.Linq.XContainer.Add
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Xml.Linq.XContainer.AddFirst(System.Object)
  parent: System.Xml.Linq.XContainer
  isExternal: true
  name: AddFirst(Object)
  fullName: System.Xml.Linq.XContainer.AddFirst(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object)
    name: AddFirst
    fullName: System.Xml.Linq.XContainer.AddFirst
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object)
    name: AddFirst
    fullName: System.Xml.Linq.XContainer.AddFirst
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XContainer.AddFirst(System.Object[])
  parent: System.Xml.Linq.XContainer
  isExternal: true
  name: AddFirst(Object[])
  fullName: System.Xml.Linq.XContainer.AddFirst(System.Object[])
  fullname.vb: System.Xml.Linq.XContainer.AddFirst(System.Object())
  name.vb: AddFirst(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object[])
    name: AddFirst
    fullName: System.Xml.Linq.XContainer.AddFirst
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object[])
    name: AddFirst
    fullName: System.Xml.Linq.XContainer.AddFirst
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Xml.Linq.XContainer.CreateWriter
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: CreateWriter()
  fullName: System.Xml.Linq.XContainer.CreateWriter()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.CreateWriter
    name: CreateWriter
    fullName: System.Xml.Linq.XContainer.CreateWriter
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.CreateWriter
    name: CreateWriter
    fullName: System.Xml.Linq.XContainer.CreateWriter
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XContainer.DescendantNodes
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: DescendantNodes()
  fullName: System.Xml.Linq.XContainer.DescendantNodes()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.DescendantNodes
    name: DescendantNodes
    fullName: System.Xml.Linq.XContainer.DescendantNodes
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.DescendantNodes
    name: DescendantNodes
    fullName: System.Xml.Linq.XContainer.DescendantNodes
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XContainer.Descendants
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: Descendants()
  fullName: System.Xml.Linq.XContainer.Descendants()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Descendants
    name: Descendants
    fullName: System.Xml.Linq.XContainer.Descendants
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Descendants
    name: Descendants
    fullName: System.Xml.Linq.XContainer.Descendants
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: Descendants(XName)
  fullName: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
    name: Descendants
    fullName: System.Xml.Linq.XContainer.Descendants
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)
    name: Descendants
    fullName: System.Xml.Linq.XContainer.Descendants
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
- uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: Element(XName)
  fullName: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
    name: Element
    fullName: System.Xml.Linq.XContainer.Element
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)
    name: Element
    fullName: System.Xml.Linq.XContainer.Element
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
- uid: System.Xml.Linq.XContainer.Elements
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: Elements()
  fullName: System.Xml.Linq.XContainer.Elements()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Elements
    name: Elements
    fullName: System.Xml.Linq.XContainer.Elements
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Elements
    name: Elements
    fullName: System.Xml.Linq.XContainer.Elements
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: Elements(XName)
  fullName: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
    name: Elements
    fullName: System.Xml.Linq.XContainer.Elements
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)
    name: Elements
    fullName: System.Xml.Linq.XContainer.Elements
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
- uid: System.Xml.Linq.XContainer.RemoveNodes
  parent: System.Xml.Linq.XContainer
  isExternal: false
  name: RemoveNodes()
  fullName: System.Xml.Linq.XContainer.RemoveNodes()
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.RemoveNodes
    name: RemoveNodes
    fullName: System.Xml.Linq.XContainer.RemoveNodes
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.RemoveNodes
    name: RemoveNodes
    fullName: System.Xml.Linq.XContainer.RemoveNodes
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)
  parent: System.Xml.Linq.XContainer
  isExternal: true
  name: ReplaceNodes(Object)
  fullName: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)
    name: ReplaceNodes
    fullName: System.Xml.Linq.XContainer.ReplaceNodes
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)
    name: ReplaceNodes
    fullName: System.Xml.Linq.XContainer.ReplaceNodes
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])
  parent: System.Xml.Linq.XContainer
  isExternal: true
  name: ReplaceNodes(Object[])
  fullName: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])
  fullname.vb: System.Xml.Linq.XContainer.ReplaceNodes(System.Object())
  name.vb: ReplaceNodes(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])
    name: ReplaceNodes
    fullName: System.Xml.Linq.XContainer.ReplaceNodes
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])
    name: ReplaceNodes
    fullName: System.Xml.Linq.XContainer.ReplaceNodes
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.NextNode
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: NextNode
  fullName: System.Xml.Linq.XNode.NextNode
- uid: System.Xml.Linq.XNode.PreviousNode
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: PreviousNode
  fullName: System.Xml.Linq.XNode.PreviousNode
- uid: System.Xml.Linq.XNode.DocumentOrderComparer
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: DocumentOrderComparer
  fullName: System.Xml.Linq.XNode.DocumentOrderComparer
- uid: System.Xml.Linq.XNode.EqualityComparer
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: EqualityComparer
  fullName: System.Xml.Linq.XNode.EqualityComparer
- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: AddAfterSelf(Object)
  fullName: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
    name: AddAfterSelf
    fullName: System.Xml.Linq.XNode.AddAfterSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
    name: AddAfterSelf
    fullName: System.Xml.Linq.XNode.AddAfterSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: AddAfterSelf(Object[])
  fullName: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  fullname.vb: System.Xml.Linq.XNode.AddAfterSelf(System.Object())
  name.vb: AddAfterSelf(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
    name: AddAfterSelf
    fullName: System.Xml.Linq.XNode.AddAfterSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
    name: AddAfterSelf
    fullName: System.Xml.Linq.XNode.AddAfterSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: AddBeforeSelf(Object)
  fullName: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
    name: AddBeforeSelf
    fullName: System.Xml.Linq.XNode.AddBeforeSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
    name: AddBeforeSelf
    fullName: System.Xml.Linq.XNode.AddBeforeSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: AddBeforeSelf(Object[])
  fullName: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  fullname.vb: System.Xml.Linq.XNode.AddBeforeSelf(System.Object())
  name.vb: AddBeforeSelf(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
    name: AddBeforeSelf
    fullName: System.Xml.Linq.XNode.AddBeforeSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
    name: AddBeforeSelf
    fullName: System.Xml.Linq.XNode.AddBeforeSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.Ancestors
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: Ancestors()
  fullName: System.Xml.Linq.XNode.Ancestors()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.Ancestors
    name: Ancestors
    fullName: System.Xml.Linq.XNode.Ancestors
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.Ancestors
    name: Ancestors
    fullName: System.Xml.Linq.XNode.Ancestors
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: Ancestors(XName)
  fullName: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
    name: Ancestors
    fullName: System.Xml.Linq.XNode.Ancestors
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
    name: Ancestors
    fullName: System.Xml.Linq.XNode.Ancestors
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: CompareDocumentOrder(XNode, XNode)
  fullName: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode, System.Xml.Linq.XNode)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
    name: CompareDocumentOrder
    fullName: System.Xml.Linq.XNode.CompareDocumentOrder
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
    name: CompareDocumentOrder
    fullName: System.Xml.Linq.XNode.CompareDocumentOrder
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.CreateReader
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: CreateReader()
  fullName: System.Xml.Linq.XNode.CreateReader()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.CreateReader
    name: CreateReader
    fullName: System.Xml.Linq.XNode.CreateReader
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.CreateReader
    name: CreateReader
    fullName: System.Xml.Linq.XNode.CreateReader
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: CreateReader(ReaderOptions)
  fullName: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
    name: CreateReader
    fullName: System.Xml.Linq.XNode.CreateReader
  - name: (
    fullName: (
  - uid: System.Xml.Linq.ReaderOptions
    name: ReaderOptions
    fullName: System.Xml.Linq.ReaderOptions
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
    name: CreateReader
    fullName: System.Xml.Linq.XNode.CreateReader
  - name: (
    fullName: (
  - uid: System.Xml.Linq.ReaderOptions
    name: ReaderOptions
    fullName: System.Xml.Linq.ReaderOptions
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.NodesAfterSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: NodesAfterSelf()
  fullName: System.Xml.Linq.XNode.NodesAfterSelf()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.NodesAfterSelf
    name: NodesAfterSelf
    fullName: System.Xml.Linq.XNode.NodesAfterSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.NodesAfterSelf
    name: NodesAfterSelf
    fullName: System.Xml.Linq.XNode.NodesAfterSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.NodesBeforeSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: NodesBeforeSelf()
  fullName: System.Xml.Linq.XNode.NodesBeforeSelf()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.NodesBeforeSelf
    name: NodesBeforeSelf
    fullName: System.Xml.Linq.XNode.NodesBeforeSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.NodesBeforeSelf
    name: NodesBeforeSelf
    fullName: System.Xml.Linq.XNode.NodesBeforeSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ElementsAfterSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ElementsAfterSelf()
  fullName: System.Xml.Linq.XNode.ElementsAfterSelf()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ElementsAfterSelf
    name: ElementsAfterSelf
    fullName: System.Xml.Linq.XNode.ElementsAfterSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ElementsAfterSelf
    name: ElementsAfterSelf
    fullName: System.Xml.Linq.XNode.ElementsAfterSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ElementsAfterSelf(XName)
  fullName: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
    name: ElementsAfterSelf
    fullName: System.Xml.Linq.XNode.ElementsAfterSelf
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
    name: ElementsAfterSelf
    fullName: System.Xml.Linq.XNode.ElementsAfterSelf
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ElementsBeforeSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ElementsBeforeSelf()
  fullName: System.Xml.Linq.XNode.ElementsBeforeSelf()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf
    name: ElementsBeforeSelf
    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf
    name: ElementsBeforeSelf
    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ElementsBeforeSelf(XName)
  fullName: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
    name: ElementsBeforeSelf
    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
    name: ElementsBeforeSelf
    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: IsAfter(XNode)
  fullName: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
    name: IsAfter
    fullName: System.Xml.Linq.XNode.IsAfter
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
    name: IsAfter
    fullName: System.Xml.Linq.XNode.IsAfter
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: IsBefore(XNode)
  fullName: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
    name: IsBefore
    fullName: System.Xml.Linq.XNode.IsBefore
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
    name: IsBefore
    fullName: System.Xml.Linq.XNode.IsBefore
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ReadFrom(XmlReader)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: ReadFrom(XmlReader)
  fullName: System.Xml.Linq.XNode.ReadFrom(XmlReader)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ReadFrom(XmlReader)
    name: ReadFrom
    fullName: System.Xml.Linq.XNode.ReadFrom
  - name: (
    fullName: (
  - uid: XmlReader
    name: XmlReader
    fullName: XmlReader
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ReadFrom(XmlReader)
    name: ReadFrom
    fullName: System.Xml.Linq.XNode.ReadFrom
  - name: (
    fullName: (
  - uid: XmlReader
    name: XmlReader
    fullName: XmlReader
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.Remove
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: Remove()
  fullName: System.Xml.Linq.XNode.Remove()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.Remove
    name: Remove
    fullName: System.Xml.Linq.XNode.Remove
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.Remove
    name: Remove
    fullName: System.Xml.Linq.XNode.Remove
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: ReplaceWith(Object)
  fullName: System.Xml.Linq.XNode.ReplaceWith(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)
    name: ReplaceWith
    fullName: System.Xml.Linq.XNode.ReplaceWith
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)
    name: ReplaceWith
    fullName: System.Xml.Linq.XNode.ReplaceWith
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: ReplaceWith(Object[])
  fullName: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  fullname.vb: System.Xml.Linq.XNode.ReplaceWith(System.Object())
  name.vb: ReplaceWith(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
    name: ReplaceWith
    fullName: System.Xml.Linq.XNode.ReplaceWith
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
    name: ReplaceWith
    fullName: System.Xml.Linq.XNode.ReplaceWith
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ToString
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ToString()
  fullName: System.Xml.Linq.XNode.ToString()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ToString
    name: ToString
    fullName: System.Xml.Linq.XNode.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ToString
    name: ToString
    fullName: System.Xml.Linq.XNode.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ToString(SaveOptions)
  fullName: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
    name: ToString
    fullName: System.Xml.Linq.XNode.ToString
  - name: (
    fullName: (
  - uid: System.Xml.Linq.SaveOptions
    name: SaveOptions
    fullName: System.Xml.Linq.SaveOptions
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
    name: ToString
    fullName: System.Xml.Linq.XNode.ToString
  - name: (
    fullName: (
  - uid: System.Xml.Linq.SaveOptions
    name: SaveOptions
    fullName: System.Xml.Linq.SaveOptions
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: DeepEquals(XNode, XNode)
  fullName: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode, System.Xml.Linq.XNode)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
    name: DeepEquals
    fullName: System.Xml.Linq.XNode.DeepEquals
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
    name: DeepEquals
    fullName: System.Xml.Linq.XNode.DeepEquals
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.BaseUri
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: BaseUri
  fullName: System.Xml.Linq.XObject.BaseUri
- uid: System.Xml.Linq.XObject.Document
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Document
  fullName: System.Xml.Linq.XObject.Document
- uid: System.Xml.Linq.XObject.Parent
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Parent
  fullName: System.Xml.Linq.XObject.Parent
- uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)
  parent: System.Xml.Linq.XObject
  isExternal: true
  name: AddAnnotation(Object)
  fullName: System.Xml.Linq.XObject.AddAnnotation(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)
    name: AddAnnotation
    fullName: System.Xml.Linq.XObject.AddAnnotation
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)
    name: AddAnnotation
    fullName: System.Xml.Linq.XObject.AddAnnotation
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.Annotation(Type)
  parent: System.Xml.Linq.XObject
  isExternal: true
  name: Annotation(Type)
  fullName: System.Xml.Linq.XObject.Annotation(Type)
  spec.csharp:
  - uid: System.Xml.Linq.XObject.Annotation(Type)
    name: Annotation
    fullName: System.Xml.Linq.XObject.Annotation
  - name: (
    fullName: (
  - uid: Type
    name: Type
    fullName: Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.Annotation(Type)
    name: Annotation
    fullName: System.Xml.Linq.XObject.Annotation
  - name: (
    fullName: (
  - uid: Type
    name: Type
    fullName: Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.Annotation``1
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Annotation<T>()
  fullName: System.Xml.Linq.XObject.Annotation<T>()
  fullname.vb: System.Xml.Linq.XObject.Annotation(Of T)()
  name.vb: Annotation(Of T)()
  spec.csharp:
  - uid: System.Xml.Linq.XObject.Annotation``1
    name: Annotation<T>
    fullName: System.Xml.Linq.XObject.Annotation<T>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.Annotation``1
    name: Annotation(Of T)
    fullName: System.Xml.Linq.XObject.Annotation(Of T)
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.Annotations(Type)
  parent: System.Xml.Linq.XObject
  isExternal: true
  name: Annotations(Type)
  fullName: System.Xml.Linq.XObject.Annotations(Type)
  spec.csharp:
  - uid: System.Xml.Linq.XObject.Annotations(Type)
    name: Annotations
    fullName: System.Xml.Linq.XObject.Annotations
  - name: (
    fullName: (
  - uid: Type
    name: Type
    fullName: Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.Annotations(Type)
    name: Annotations
    fullName: System.Xml.Linq.XObject.Annotations
  - name: (
    fullName: (
  - uid: Type
    name: Type
    fullName: Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.Annotations``1
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Annotations<T>()
  fullName: System.Xml.Linq.XObject.Annotations<T>()
  fullname.vb: System.Xml.Linq.XObject.Annotations(Of T)()
  name.vb: Annotations(Of T)()
  spec.csharp:
  - uid: System.Xml.Linq.XObject.Annotations``1
    name: Annotations<T>
    fullName: System.Xml.Linq.XObject.Annotations<T>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.Annotations``1
    name: Annotations(Of T)
    fullName: System.Xml.Linq.XObject.Annotations(Of T)
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.RemoveAnnotations(Type)
  parent: System.Xml.Linq.XObject
  isExternal: true
  name: RemoveAnnotations(Type)
  fullName: System.Xml.Linq.XObject.RemoveAnnotations(Type)
  spec.csharp:
  - uid: System.Xml.Linq.XObject.RemoveAnnotations(Type)
    name: RemoveAnnotations
    fullName: System.Xml.Linq.XObject.RemoveAnnotations
  - name: (
    fullName: (
  - uid: Type
    name: Type
    fullName: Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.RemoveAnnotations(Type)
    name: RemoveAnnotations
    fullName: System.Xml.Linq.XObject.RemoveAnnotations
  - name: (
    fullName: (
  - uid: Type
    name: Type
    fullName: Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.RemoveAnnotations``1
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: RemoveAnnotations<T>()
  fullName: System.Xml.Linq.XObject.RemoveAnnotations<T>()
  fullname.vb: System.Xml.Linq.XObject.RemoveAnnotations(Of T)()
  name.vb: RemoveAnnotations(Of T)()
  spec.csharp:
  - uid: System.Xml.Linq.XObject.RemoveAnnotations``1
    name: RemoveAnnotations<T>
    fullName: System.Xml.Linq.XObject.RemoveAnnotations<T>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.RemoveAnnotations``1
    name: RemoveAnnotations(Of T)
    fullName: System.Xml.Linq.XObject.RemoveAnnotations(Of T)
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.Changed
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Changed
  fullName: System.Xml.Linq.XObject.Changed
- uid: System.Xml.Linq.XObject.Changing
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Changing
  fullName: System.Xml.Linq.XObject.Changing
- uid: IEnumerable{System.Xml.Linq.XElement}
  definition: IEnumerable`1
  name: IEnumerable<XElement>
  fullName: IEnumerable<System.Xml.Linq.XElement>
  fullname.vb: IEnumerable(Of System.Xml.Linq.XElement)
  name.vb: IEnumerable(Of XElement)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: XElement
    fullName: System.Xml.Linq.XElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XElement
    name: XElement
    fullName: System.Xml.Linq.XElement
  - name: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  fullName: IEnumerable<>
  fullname.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Object[]
  isExternal: true
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Xml.Linq.XStreamingElement
  parent: System.Xml.Linq
  isExternal: false
  name: XStreamingElement
  fullName: System.Xml.Linq.XStreamingElement
- uid: System.Xml.Linq.XAttribute
  parent: System.Xml.Linq
  isExternal: false
  name: XAttribute
  fullName: System.Xml.Linq.XAttribute
- uid: System.Boolean
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Xml.Linq.XObject.NodeType
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: NodeType
  fullName: System.Xml.Linq.XObject.NodeType
- uid: XmlNodeType
  isExternal: true
  name: XmlNodeType
  fullName: XmlNodeType
- uid: System.String
  isExternal: true
  name: String
  fullName: System.String
- uid: IEnumerable{System.Xml.Linq.XAttribute}
  definition: IEnumerable`1
  name: IEnumerable<XAttribute>
  fullName: IEnumerable<System.Xml.Linq.XAttribute>
  fullname.vb: IEnumerable(Of System.Xml.Linq.XAttribute)
  name.vb: IEnumerable(Of XAttribute)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Xml.Linq.XAttribute
    name: XAttribute
    fullName: System.Xml.Linq.XAttribute
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XAttribute
    name: XAttribute
    fullName: System.Xml.Linq.XAttribute
  - name: )
    fullName: )
- uid: System.Xml.Linq.XElement.Attributes
- uid: IEnumerable{System.Xml.Linq.XNode}
  definition: IEnumerable`1
  name: IEnumerable<XNode>
  fullName: IEnumerable<System.Xml.Linq.XNode>
  fullname.vb: IEnumerable(Of System.Xml.Linq.XNode)
  name.vb: IEnumerable(Of XNode)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
- uid: System.Xml.Linq.XElement.DescendantsAndSelf
- uid: System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)
- uid: System.Xml.Linq.XNamespace
  parent: System.Xml.Linq
  isExternal: false
  name: XNamespace
  fullName: System.Xml.Linq.XNamespace
- uid: System.Xml.Linq.XDocument.Parse(System.String)
- uid: System.Xml.Linq.XDocument
  parent: System.Xml.Linq
  isExternal: false
  name: XDocument
  fullName: System.Xml.Linq.XDocument
- uid: System.Xml.Linq.XElement.Parse(System.String)
- uid: System.Xml.Linq.XDocument.Load(System.String)
- uid: System.Xml.Linq.LoadOptions
  parent: System.Xml.Linq
  isExternal: false
  name: LoadOptions
  fullName: System.Xml.Linq.LoadOptions
- uid: System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)
- uid: Stream
  isExternal: true
  name: Stream
  fullName: Stream
- uid: TextReader
  isExternal: true
  name: TextReader
  fullName: TextReader
- uid: XmlReader
  isExternal: true
  name: XmlReader
  fullName: XmlReader
- uid: System.Xml.Linq.XElement.RemoveAttributes
- uid: System.Xml.Linq.XElement.RemoveAll
- uid: System.Xml.Linq.XElement.Save(Stream,System.Xml.Linq.SaveOptions)
- uid: System.Xml.Linq.SaveOptions
  parent: System.Xml.Linq
  isExternal: false
  name: SaveOptions
  fullName: System.Xml.Linq.SaveOptions
- uid: System.Xml.Linq.XElement.Save(TextWriter,System.Xml.Linq.SaveOptions)
- uid: TextWriter
  isExternal: true
  name: TextWriter
  fullName: TextWriter
- uid: XmlWriter
  isExternal: true
  name: XmlWriter
  fullName: XmlWriter
- uid: System.Xml.Linq.XElement.Value
- uid: System.Xml.Linq.XAttribute.SetValue(System.Object)
- uid: System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)
- uid: System.Xml.Linq.XElement.SetValue(System.Object)
- uid: System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)
- uid: System.Xml.Linq.XNode.WriteTo(XmlWriter)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: WriteTo(XmlWriter)
  fullName: System.Xml.Linq.XNode.WriteTo(XmlWriter)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.WriteTo(XmlWriter)
    name: WriteTo
    fullName: System.Xml.Linq.XNode.WriteTo
  - name: (
    fullName: (
  - uid: XmlWriter
    name: XmlWriter
    fullName: XmlWriter
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.WriteTo(XmlWriter)
    name: WriteTo
    fullName: System.Xml.Linq.XNode.WriteTo
  - name: (
    fullName: (
  - uid: XmlWriter
    name: XmlWriter
    fullName: XmlWriter
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  definition: System.Nullable`1
  name: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  fullName: System.Nullable<>
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Int32
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int32}
  definition: System.Nullable`1
  name: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.UInt32
  isExternal: true
  name: UInt32
  fullName: System.UInt32
- uid: System.Nullable{System.UInt32}
  definition: System.Nullable`1
  name: Nullable<UInt32>
  fullName: System.Nullable<System.UInt32>
  fullname.vb: System.Nullable(Of System.UInt32)
  name.vb: Nullable(Of UInt32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Int64
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System.Nullable{System.Int64}
  definition: System.Nullable`1
  name: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.UInt64
  isExternal: true
  name: UInt64
  fullName: System.UInt64
- uid: System.Nullable{System.UInt64}
  definition: System.Nullable`1
  name: Nullable<UInt64>
  fullName: System.Nullable<System.UInt64>
  fullname.vb: System.Nullable(Of System.UInt64)
  name.vb: Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Single
  isExternal: true
  name: Single
  fullName: System.Single
- uid: System.Nullable{System.Single}
  definition: System.Nullable`1
  name: Nullable<Single>
  fullName: System.Nullable<System.Single>
  fullname.vb: System.Nullable(Of System.Single)
  name.vb: Nullable(Of Single)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
- uid: System.Double
  isExternal: true
  name: Double
  fullName: System.Double
- uid: System.Nullable{System.Double}
  definition: System.Nullable`1
  name: Nullable<Double>
  fullName: System.Nullable<System.Double>
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: System.Decimal
  isExternal: true
  name: Decimal
  fullName: System.Decimal
- uid: System.Nullable{System.Decimal}
  definition: System.Nullable`1
  name: Nullable<Decimal>
  fullName: System.Nullable<System.Decimal>
  fullname.vb: System.Nullable(Of System.Decimal)
  name.vb: Nullable(Of Decimal)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
- uid: DateTime
  isExternal: true
  name: DateTime
  fullName: DateTime
- uid: System.Nullable{DateTime}
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  fullname.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: DateTime
    name: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  fullName: DateTimeOffset
- uid: System.Nullable{DateTimeOffset}
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  fullname.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    fullName: )
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  fullName: TimeSpan
- uid: System.Nullable{TimeSpan}
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  fullName: System.Nullable<TimeSpan>
  fullname.vb: System.Nullable(Of TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    fullName: )
- uid: Guid
  isExternal: true
  name: Guid
  fullName: Guid
- uid: System.Nullable{Guid}
  definition: System.Nullable`1
  name: Nullable<Guid>
  fullName: System.Nullable<Guid>
  fullname.vb: System.Nullable(Of Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: Guid
    name: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    fullName: Guid
    isExternal: true
  - name: )
    fullName: )
